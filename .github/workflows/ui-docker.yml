name: Build & Push UI Docker image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
    paths:
      - "Dockerfile"
      - "scripts/**"
      - "szamlazzponthu-test-ui-app/**"
      - ".github/workflows/ui-docker.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - "scripts/**"
      - "szamlazzponthu-test-ui-app/**"
      - ".github/workflows/ui-docker.yml"

permissions:
  contents: read
  packages: write

env:
  # Az image neve GHCR-hez: ghcr.io/<owner>/<repo>-ui
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-ui

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Ha multi-arch kell:
          # platforms: linux/amd64,linux/arm64
          build-args: |
            APP_DIR=szamlazzponthu-test-ui-app

      - name: Image digest
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "Pushed digest ${{ steps.meta.outputs.digest }}"
