/* tslint:disable */
/* eslint-disable */
/**
 * Usr API
 * CRUD műveletek a Usr erőforráson.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ValidationErrorAllOfDetails } from './ValidationErrorAllOfDetails';
import {
    ValidationErrorAllOfDetailsFromJSON,
    ValidationErrorAllOfDetailsFromJSONTyped,
    ValidationErrorAllOfDetailsToJSON,
    ValidationErrorAllOfDetailsToJSONTyped,
} from './ValidationErrorAllOfDetails';

/**
 * 
 * @export
 * @interface ValidationError
 */
export interface ValidationError {
    /**
     * 
     * @type {string}
     * @memberof ValidationError
     */
    error?: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationError
     */
    message?: string;
    /**
     * 
     * @type {Array<ValidationErrorAllOfDetails>}
     * @memberof ValidationError
     */
    details?: Array<ValidationErrorAllOfDetails>;
}

/**
 * Check if a given object implements the ValidationError interface.
 */
export function instanceOfValidationError(value: object): value is ValidationError {
    return true;
}

export function ValidationErrorFromJSON(json: any): ValidationError {
    return ValidationErrorFromJSONTyped(json, false);
}

export function ValidationErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationError {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'] == null ? undefined : json['error'],
        'message': json['message'] == null ? undefined : json['message'],
        'details': json['details'] == null ? undefined : ((json['details'] as Array<any>).map(ValidationErrorAllOfDetailsFromJSON)),
    };
}

export function ValidationErrorToJSON(json: any): ValidationError {
    return ValidationErrorToJSONTyped(json, false);
}

export function ValidationErrorToJSONTyped(value?: ValidationError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': value['error'],
        'message': value['message'],
        'details': value['details'] == null ? undefined : ((value['details'] as Array<any>).map(ValidationErrorAllOfDetailsToJSON)),
    };
}

